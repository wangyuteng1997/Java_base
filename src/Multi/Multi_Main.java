package Multi;

/**
 * @author wang yuteng
 * @data 2020/7/23 16:34
 */
/*
* 向上转型一定是安全的，没有问题的，正确的，但是也有一个弊端
* 对象一旦向上转型为父类，那么就无法使用子类原本特有的内容
*
* */
public class Multi_Main {
    public static void main(String[] args) {
        /*-------正确的向上转型--------------------------------*/

        Animal A = new Cat();
        A.eat();
//      A.CatchMoush;因为多态中向上就只能使用子类中覆盖重写或者父类中的方法


        /*-----------------正确的向下转型-----------------------------------*/

//        因为向上转型无法使用子类中特有的方法，现在我们向下转型，进行还原动作

        Cat cat = (Cat) A;
        cat.CatchMouse();

        /*-----------------错误的向下转型-----------------------------------*/
//本来是一只猫，现在非要转型为狗，编译没有错误运行报错（类转换异常）classcastexception
        Dog dog = (Dog) A;


    }
}
